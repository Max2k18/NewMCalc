package com.maxsavteam.newmcalc;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.content.pm.ActivityInfo;import android.content.res.ColorStateList;import android.content.res.Resources;import android.graphics.Color;import android.graphics.Point;import android.graphics.drawable.Drawable;import android.os.Bundle;import android.preference.PreferenceManager;import android.view.Display;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.view.WindowManager;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.Button;import android.widget.CheckBox;import android.widget.EditText;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import androidx.appcompat.app.ActionBar;import androidx.appcompat.app.AppCompatActivity;import java.math.BigInteger;import java.util.ArrayList;import java.util.concurrent.ThreadLocalRandom;public class NumberPasswordGeneratorActivity extends AppCompatActivity {    int len = 0;    Resources res;    ArrayList<String> s = new ArrayList<>();    //ArrayList<String> def = new ArrayList<>();    String caplets = "MNBVCXZLKJHGFDSAPOIUYTREWQ",            lowercase = "qwertyuiopasdfghjklzxcvbnm",            digits = "0123456789", special = "<$@>",            hyphen = "-",            space = " ",            parentheses = "{[()]}",            underscore = "_";    CheckBox swcap, swlower, swdigi, swhyphen, swpar, swspace, swspecial, swunderscore;    int kol_sw = 3;    Drawable dr;    SharedPreferences sp;    View.OnLongClickListener longclick = new View.OnLongClickListener(){        @Override        public boolean onLongClick(View v){            EditText min = findViewById(R.id.edTextMin);            EditText max = findViewById(R.id.edTextMax);            min.setText("");            max.setText("");            return true;        }    };    String start_type;    boolean DarkMode;    @Override    protected void onCreate(Bundle savedInstanceState) {        sp = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());        DarkMode = sp.getBoolean("dark_mode", false);        if(DarkMode)            setTheme(android.R.style.Theme_Material_NoActionBar);        else            setTheme(R.style.AppTheme);        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_numgen);        res = getResources();        ActionBar appActionBar = getSupportActionBar();        EditText ed = findViewById(R.id.edTextMax);        ed.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.colorAccent)));        ed = findViewById(R.id.edTextMin);        ed.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.colorAccent)));        if(DarkMode){            getWindow().setBackgroundDrawableResource(R.drawable.black);            getWindow().setNavigationBarColor(Color.BLACK);            TextView t = findViewById(R.id.lblSelectNumber);            t.setTextColor(getResources().getColor(R.color.white));            t = findViewById(R.id.txtFrom);            t.setTextColor(getResources().getColor(R.color.white));            t = findViewById(R.id.textView4);            t.setTextColor(getResources().getColor(R.color.white));            t = findViewById(R.id.txtAnswer);            t.setTextColor(getResources().getColor(R.color.white));            ed = findViewById(R.id.edTextMax);            ed.setTextColor(getResources().getColor(R.color.white));            ed = findViewById(R.id.edTextMin);            ed.setTextColor(getResources().getColor(R.color.white));            ImageView img = findViewById(R.id.btnCopy);            img.setImageDrawable(getResources().getDrawable(R.drawable.ic_content_copy_white_100dp));	        appActionBar.setHomeAsUpIndicator(R.drawable.ic_arrow_back_white_32dp);	        appActionBar.setBackgroundDrawable(getDrawable(R.drawable.black));        }else {	        getWindow().setBackgroundDrawableResource(R.drawable.white);	        getWindow().setNavigationBarColor(Color.WHITE);	        appActionBar.setHomeAsUpIndicator(R.drawable.ic_arrow_back_black_32dp);	        appActionBar.setBackgroundDrawable(getDrawable(R.drawable.white));        }        try{            getSupportActionBar().setDisplayHomeAsUpEnabled(true);            getSupportActionBar().setTitle(R.string.randomgen);            getSupportActionBar().setElevation(0);            setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);        }catch(Exception e){            Toast.makeText(getApplicationContext(), e.toString(), Toast.LENGTH_LONG).show();            finish();        }        Intent intent = getIntent();        start_type = intent.getStringExtra("start_type");        if(intent.getStringExtra("type").equals("pass")){            if(DarkMode)                setTheme(android.R.style.Theme_Material_NoActionBar);            else                setTheme(R.style.AppTheme);            setContentView(R.layout.numgen_passgen);            swcap = findViewById(R.id.swCap);            swdigi = findViewById(R.id.swDigits);            swhyphen = findViewById(R.id.swHyphen);            swlower = findViewById(R.id.swLowerCase);            swpar = findViewById(R.id.swPar);            swspace = findViewById(R.id.swSpace);            swspecial = findViewById(R.id.swSpecial);            swunderscore = findViewById(R.id.swUnderScore);            String[] strarr = res.getStringArray(R.array.switches);            swunderscore.setText(strarr[4]);            int length = swunderscore.getWidth();            swcap.setText(strarr[0]);            swcap.setBackgroundTintList(ColorStateList.valueOf(res.getColor(R.color.colorAccent)));            //swcap.setWidth(length);            swlower.setText(strarr[1]);            swlower.setBackgroundTintList(ColorStateList.valueOf(res.getColor(R.color.colorAccent)));            //swlower.setWidth(length);            swdigi.setText(strarr[2]);            swdigi.setBackgroundTintList(ColorStateList.valueOf(res.getColor(R.color.colorAccent)));            //swdigi.setWidth(length);            swhyphen.setText(strarr[3]);            swhyphen.setBackgroundTintList(ColorStateList.valueOf(res.getColor(R.color.colorAccent)));            //swhyphen.setWidth(length);            swspace.setText(strarr[5]);            swspace.setBackgroundTintList(ColorStateList.valueOf(res.getColor(R.color.colorAccent)));            //swspace.setWidth(length);            swspecial.setText(strarr[6]);            swspecial.setBackgroundTintList(ColorStateList.valueOf(res.getColor(R.color.colorAccent)));            //swspecial.setWidth(length);            swpar.setText(strarr[7]);            swpar.setBackgroundTintList(ColorStateList.valueOf(res.getColor(R.color.colorAccent)));            //swpar.setWidth(length);            //length = Integer.max(swcap.getWidth(), swdigi.getWidth());            if(DarkMode) {                ImageView img = findViewById(R.id.btnCopyPass);                img.setImageDrawable(getResources().getDrawable(R.drawable.ic_content_copy_white_100dp));                TextView txt = findViewById(R.id.txtGenedPass);                txt.setTextColor(getResources().getColor(R.color.white));            }            int [] ids = new int[]{                    R.id.btnPass6,                    R.id.btnPass8,                    R.id.btnPass12,                    R.id.btnPass16            };            Display d = ((WindowManager) getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();            Point size = new Point();            d.getSize(size);            try{                getSupportActionBar().setTitle(R.string.passgen);            }catch(Exception e){                Toast.makeText(getApplicationContext(), e.toString(), Toast.LENGTH_LONG).show();                finish();            }            setbackground();            btnonclick(findViewById(R.id.btnPass8));            for(int id : ids){                Button btn = findViewById(id);                ViewGroup.LayoutParams lay = btn.getLayoutParams();                lay.height = size.x / 5;                lay.width = size.x / 5;                btn.setLayoutParams(lay);                /*btn.setWidth(size.x / 5);                btn.setHeight(btn.getWidth());*/            }        }        //b.setOnLongClickListener(longclick);*/    }    private void setbackground(){        ArrayList<Button> b = new ArrayList<>();        b.add(findViewById(R.id.btnPass6));        b.add(findViewById(R.id.btnPass8));        b.add(findViewById(R.id.btnPass12));        b.add(findViewById(R.id.btnPass16));        if(DarkMode){            for(int i = 0; i < b.size(); i++){                b.get(i).setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.black)));                b.get(i).setTextColor(getResources().getColor(R.color.white));            }        }else{            for(int i = 0; i < b.size(); i++){                b.get(i).setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.white)));                b.get(i).setTextColor(getResources().getColor(R.color.black));            }        }    }    public void onSwClick(View v){        CheckBox sw = (CheckBox) v;        if(sw.isChecked()){            kol_sw++;        }else            kol_sw--;    }    public void btnonclick(View v){        Button btn = findViewById(v.getId());        setbackground();        int textColor, bg;        if(DarkMode){            /*textColor = R.color.black;            bg = R.color.white;*/            btn.setTextColor(getResources().getColor(R.color.black));            btn.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.white)));        }else{            btn.setTextColor(getResources().getColor(R.color.white));            btn.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.black)));        }        len = Integer.parseInt(btn.getText().toString());    }    public void genpass(View v){        if(len != 0){            if(kol_sw != 0){                String resource_str = "";                //Switch swcap, swlower, swdigi, swhyphen, swpar, swspace, swspecial;                if(swcap.isChecked())                    resource_str += caplets;                if(swlower.isChecked())                    resource_str += lowercase;                if(swdigi.isChecked())                    resource_str += digits;                if(swhyphen.isChecked())                    resource_str += hyphen;                if(swpar.isChecked())                    resource_str += parentheses;                if(swspace.isChecked())                    resource_str += space;                if(swspecial.isChecked())                    resource_str += special;                if(swunderscore.isChecked())                    resource_str += "_";                String pass = "";                for(int i = 0, a; i < len; i++){                    a = ThreadLocalRandom.current().nextInt(0, resource_str.length());                    pass = String.format("%s%s", pass, resource_str.charAt(a));                }                TextView t = findViewById(R.id.txtGenedPass);                t.setText(pass);                LinearLayout lay = findViewById(R.id.linearLayout2);                if(lay.getVisibility() != View.VISIBLE) {                    Animation anim = AnimationUtils.loadAnimation(this, R.anim.anim_extension_of_borders);                    lay.setAnimation(anim);                    lay.setVisibility(View.VISIBLE);                    lay.animate();                    anim.start();                }            }else{                Toast.makeText(getApplicationContext(), res.getString(R.string.pass_sw_all_off), Toast.LENGTH_LONG).show();            }        }    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        int id = item.getItemId();        //Toast.makeText(getApplicationContext(), Integer.toString(id) + " " + Integer.toString(R.id.home), Toast.LENGTH_SHORT).show();        if(id == android.R.id.home){            exit_activity();        }        return super.onOptionsItemSelected(item);    }    private void exit_activity(){        finish();        overridePendingTransition(R.anim.activity_in1, R.anim.activity_out1);    }    public void generate(View v){        EditText minInput = findViewById(R.id.edTextMin);        EditText maxInput = findViewById(R.id.edTextMax);        String maxs = maxInput.getText().toString();        String mins = minInput.getText().toString();        if(!minInput.getText().toString().equals("") && !maxInput.getText().toString().equals("")){            BigInteger b1 = new BigInteger(mins);            BigInteger b2 = new BigInteger(maxs), lmax = BigInteger.valueOf(Long.MAX_VALUE), lmin = BigInteger.valueOf(Long.MIN_VALUE);            if(b1.compareTo(lmin) < 0 || b1.compareTo(lmax) > 0 || b2.compareTo(lmin) < 0 || b2.compareTo(lmax) > 0){                Toast.makeText(getApplicationContext(), getResources().getString(R.string.maxintexception), Toast.LENGTH_LONG).show();                return;            }            int minNum = Integer.parseInt(minInput.getText().toString());            int maxNum = Integer.parseInt(maxInput.getText().toString());            if(minNum > maxNum){                int temp = minNum;                minNum = maxNum;                maxNum = temp;            }            int randomNum = ThreadLocalRandom.current().nextInt(minNum, maxNum + 1);            TextView t = findViewById(R.id.txtAnswer);            t.setText(String.format("%d", randomNum));            findViewById(R.id.layoutLinear).setVisibility(View.VISIBLE);        }    }    public void copy(View v){        android.text.ClipboardManager clipboard = (android.text.ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);        if(clipboard != null){            TextView t;            if(v.getId() == R.id.btnCopyPass){                t = findViewById(R.id.txtGenedPass);            }else                t = findViewById(R.id.txtAnswer);            clipboard.setText(t.getText().toString());            Toast.makeText(getApplicationContext(), getResources().getString(R.string.copied), Toast.LENGTH_SHORT).show();        }    }    @Override    public void onBackPressed(){        //super.onBackPressed();        if(start_type.equals("shortcut")) {            startActivity(new Intent(this, MainActivity.class));            exit_activity();        }else if(start_type.equals("app")){            exit_activity();        }    }}