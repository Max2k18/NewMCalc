package com.maxsavteam.newmcalc2.ui;import android.annotation.SuppressLint;import android.os.Bundle;import android.util.Log;import android.util.TypedValue;import android.view.Gravity;import android.view.animation.AnimationUtils;import android.widget.Button;import android.widget.EditText;import android.widget.TextSwitcher;import android.widget.TextView;import com.maxsavteam.newmcalc2.Main2Activity;import com.maxsavteam.newmcalc2.R;import com.maxsavteam.newmcalc2.ui.base.ThemeActivity;import com.maxsavteam.newmcalc2.widget.FullNumpadView;import java.math.BigInteger;import java.security.SecureRandom;public class NumberGeneratorActivity extends ThemeActivity {	private static final String TAG = Main2Activity.TAG + " RandInt";	private final SecureRandom mRandom = new SecureRandom();	@SuppressLint("SetTextI18n")	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate( savedInstanceState );		setContentView( R.layout.activity_numgen );		setActionBar( R.id.toolbar );		displayHomeAsUp();		TextSwitcher textSwitcher = findViewById( R.id.textSwitcherNumGen );		textSwitcher.setFactory( ()->{			TextView textView = new TextView( this );			textView.setTextColor( super.textColor );			textView.setTextSize( TypedValue.COMPLEX_UNIT_PX, getResources().getDimensionPixelSize( R.dimen.num_gen_answer_text_size ) );			textView.setGravity( Gravity.CENTER );			textView.setTextIsSelectable( true );			return textView;		} );		textSwitcher.setInAnimation( AnimationUtils.loadAnimation( this, android.R.anim.fade_in ) );		textSwitcher.setOutAnimation( AnimationUtils.loadAnimation( this, android.R.anim.fade_out ) );		EditText minInputEditText = findViewById( R.id.edTextMin );		EditText maxInputEditText = findViewById( R.id.edTextMax );		minInputEditText.setText( "1" );		maxInputEditText.setText( "100" );		generate();		maxInputEditText.requestFocus();		FullNumpadView numpadView = findViewById( R.id.numgen_numpad );		numpadView.linkWith( minInputEditText );		numpadView.linkWith( maxInputEditText );		Button buttonGenerate = new Button( this, null, 0, R.style.FullNumpadViewButtonsStyle );		buttonGenerate.setText( "GEN" );		buttonGenerate.setTextSize( TypedValue.COMPLEX_UNIT_SP, 20 );		numpadView.addCustomButton( buttonGenerate );		buttonGenerate.setOnClickListener( v -> generate() );	}	private void generate(){		EditText minInputEditText = findViewById( R.id.edTextMin );		EditText maxInputEditText = findViewById( R.id.edTextMax );		String maxS = maxInputEditText.getText().toString();		String minS = minInputEditText.getText().toString();		BigInteger minVal;		BigInteger maxVal;		try {			minVal = new BigInteger( minS );			maxVal = new BigInteger( maxS );		}catch (NumberFormatException e){			return;		}		BigInteger randomNum = generateRandomInteger( maxVal, minVal );		((TextSwitcher) findViewById( R.id.textSwitcherNumGen )).setText( randomNum.toString() );	}	private BigInteger generateRandomInteger(BigInteger maxVal, BigInteger minVal){		if(minVal.compareTo( maxVal ) > 0){			BigInteger t = maxVal;			maxVal = minVal;			minVal = t;		}		// now minVal <= maxVal		if(maxVal.signum() < 0) // minVal < maxVal < 0			return generateRandomInteger( minVal.abs(), maxVal.abs() )					.negate();		if(minVal.signum() < 0) // minVal < 0 < maxVal			return generateRandomInteger( maxVal.subtract( minVal /*minVal is negative*/ ), BigInteger.ZERO )					.add( minVal );		BigInteger delta = maxVal				.subtract( minVal )				.add( BigInteger.ONE );		BigInteger result = new BigInteger( maxVal.bitLength() + 2, mRandom );		Log.i( TAG, "generateRandomInteger: result=" + result + " delta=" + delta + " rem=" + result.remainder( delta ) );		result = result.remainder( delta );		return result.add( minVal );	}}